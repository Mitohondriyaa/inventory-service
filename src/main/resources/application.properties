# Core application configuration
spring.application.name=inventory-service
server.port=8082

# MySQL configuration
spring.datasource.url=jdbc:mysql://localhost:3307/inventory_service
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=none

# Security (OAuth2 JWT Resource Server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8088/realms/microservices-realm

# Swagger UI (springdoc-openapi)
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.url=/swagger-api
springdoc.api-docs.path=/swagger-api

# Kafka properties
spring.kafka.bootstrap-servers=localhost:29092,localhost:29093
spring.kafka.consumer.group-id=inventoryService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8085
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.template.default-topic=inventory-reserved
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8085